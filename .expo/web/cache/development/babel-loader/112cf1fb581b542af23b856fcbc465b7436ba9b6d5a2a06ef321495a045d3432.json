{"ast":null,"code":"import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addToBasket, removeFromBasket, setQuantity } from \"../component/BasketSlice\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar OPTIONS = [\"1\", \"2\", \"3\", \"4\", \"5\"];\nvar WINDOW_WIDTH = Dimensions.get(\"window\").width;\nvar WINDOW_HEIGHT = Dimensions.get(\"window\").height;\nvar ModalPicker = function ModalPicker(props) {\n  var dispatch = useDispatch();\n  var changeModalVisibility = function changeModalVisibility(visible) {\n    props.changeModalVisibility(visible);\n  };\n  var setData = function setData(option) {\n    props.setData(option);\n  };\n  var onPressItem = function onPressItem(option) {\n    changeModalVisibility(false);\n    setData(option);\n    dispatch(setQuantity({\n      selectedId: props.selectedId,\n      option: option\n    }));\n  };\n  var optionItems = OPTIONS.map(function (item, index) {\n    return _jsx(TouchableOpacity, {\n      style: styles.option,\n      onPress: function onPress() {\n        return onPressItem(item);\n      },\n      children: _jsx(Text, {\n        style: styles.text,\n        children: item\n      })\n    }, index);\n  });\n  return _jsx(TouchableOpacity, {\n    onPress: function onPress() {\n      return changeModalVisibility(false);\n    },\n    style: styles.container,\n    children: _jsxs(View, {\n      style: [styles.modal, {\n        width: WINDOW_WIDTH - 20,\n        height: WINDOW_HEIGHT / 2\n      }],\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \" S\\xE9lectionner la quantit\\xE9 \"\n      }), _jsxs(ScrollView, {\n        children: [optionItems, _jsx(TouchableOpacity, {\n          style: styles.option,\n          onPress: function onPress() {\n            dispatch(addToBasket(props.selectedId));\n            changeModalVisibility(false);\n          },\n          children: _jsx(Text, {\n            style: styles.text,\n            children: \"Ajouter 1\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.option,\n          onPress: function onPress() {\n            dispatch(removeFromBasket(props.selectedId));\n            changeModalVisibility(false);\n          },\n          children: _jsx(Text, {\n            style: styles.text,\n            children: \"Enlever 1\"\n          })\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  modal: {\n    backgroundColor: \"white\",\n    borderRadius: 10\n  },\n  option: {\n    borderTopWidth: 1,\n    alignItems: \"flex-start\"\n  },\n  text: {\n    margin: 20,\n    fontSize: 18\n  },\n  title: {\n    fontSize: 30,\n    color: \"black\",\n    fontStyle: \"italic\",\n    marginBottom: 30,\n    marginTop: 20,\n    alignSelf: \"center\"\n  }\n});\nexport { ModalPicker };","map":{"version":3,"names":["React","useSelector","useDispatch","addToBasket","removeFromBasket","setQuantity","StyleSheet","Text","View","TouchableOpacity","Dimensions","ScrollView","jsx","_jsx","jsxs","_jsxs","OPTIONS","WINDOW_WIDTH","get","width","WINDOW_HEIGHT","height","ModalPicker","props","dispatch","changeModalVisibility","visible","setData","option","onPressItem","selectedId","optionItems","map","item","index","style","styles","onPress","children","text","container","modal","title","create","flex","alignItems","justifyContent","backgroundColor","borderRadius","borderTopWidth","margin","fontSize","color","fontStyle","marginBottom","marginTop","alignSelf"],"sources":["/Users/samirafawaz/Documents/BateauThibault-REACT/src/component/ModalPicker.js"],"sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  addToBasket,\n  removeFromBasket,\n  setQuantity,\n} from \"../component/BasketSlice\";\n\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TouchableOpacity,\n  Dimensions,\n  ScrollView,\n} from \"react-native\";\n\nconst OPTIONS = [\"1\", \"2\", \"3\", \"4\", \"5\"];\nconst WINDOW_WIDTH = Dimensions.get(\"window\").width;\nconst WINDOW_HEIGHT = Dimensions.get(\"window\").height;\n\nconst ModalPicker = (props) => {\n  const dispatch = useDispatch();\n\n  const changeModalVisibility = (visible) => {\n    props.changeModalVisibility(visible);\n  };\n\n  const setData = (option) => {\n    props.setData(option);\n  };\n\n  const onPressItem = (option) => {\n    changeModalVisibility(false);\n    setData(option);\n    dispatch(setQuantity({ selectedId: props.selectedId, option }));\n  };\n\n  const optionItems = OPTIONS.map((item, index) => {\n    return (\n      <TouchableOpacity\n        style={styles.option}\n        key={index}\n        onPress={() => onPressItem(item)}\n      >\n        <Text style={styles.text}>{item}</Text>\n      </TouchableOpacity>\n    );\n  });\n\n  return (\n    <TouchableOpacity\n      onPress={() => changeModalVisibility(false)}\n      style={styles.container}\n    >\n      <View style={[styles.modal, { width: WINDOW_WIDTH - 20, height: WINDOW_HEIGHT / 2 }]}>\n        <Text style={styles.title}> Sélectionner la quantité </Text>\n        <ScrollView>\n          {optionItems}\n          <TouchableOpacity\n            style={styles.option}\n            onPress={() => {\n              dispatch(addToBasket(props.selectedId));\n              changeModalVisibility(false);\n            }}\n          >\n            <Text style={styles.text}>{\"Ajouter 1\"}</Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            style={styles.option}\n            onPress={() => {\n              dispatch(removeFromBasket(props.selectedId));\n              changeModalVisibility(false);\n            }}\n          >\n            <Text style={styles.text}>{\"Enlever 1\"}</Text>\n          </TouchableOpacity>\n        </ScrollView>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  modal: {\n    backgroundColor: \"white\",\n    borderRadius: 10,\n  },\n  option: {\n    borderTopWidth: 1,\n    alignItems: \"flex-start\",\n  },\n  text: {\n    margin: 20,\n    fontSize: 18,\n  },\n  title: {\n    fontSize: 30,\n    color: \"black\",\n    fontStyle: \"italic\",\n    marginBottom: 30,\n    marginTop: 20,\n    alignSelf: \"center\",\n  },\n});\n\nexport { ModalPicker };\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SACEC,WAAW,EACXC,gBAAgB,EAChBC,WAAW;AACqB,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAWlC,IAAMC,OAAO,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AACzC,IAAMC,YAAY,GAAGP,UAAU,CAACQ,GAAG,CAAC,QAAQ,CAAC,CAACC,KAAK;AACnD,IAAMC,aAAa,GAAGV,UAAU,CAACQ,GAAG,CAAC,QAAQ,CAAC,CAACG,MAAM;AAErD,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAIC,KAAK,EAAK;EAC7B,IAAMC,QAAQ,GAAGtB,WAAW,CAAC,CAAC;EAE9B,IAAMuB,qBAAqB,GAAG,SAAxBA,qBAAqBA,CAAIC,OAAO,EAAK;IACzCH,KAAK,CAACE,qBAAqB,CAACC,OAAO,CAAC;EACtC,CAAC;EAED,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAIC,MAAM,EAAK;IAC1BL,KAAK,CAACI,OAAO,CAACC,MAAM,CAAC;EACvB,CAAC;EAED,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAID,MAAM,EAAK;IAC9BH,qBAAqB,CAAC,KAAK,CAAC;IAC5BE,OAAO,CAACC,MAAM,CAAC;IACfJ,QAAQ,CAACnB,WAAW,CAAC;MAAEyB,UAAU,EAAEP,KAAK,CAACO,UAAU;MAAEF,MAAM,EAANA;IAAO,CAAC,CAAC,CAAC;EACjE,CAAC;EAED,IAAMG,WAAW,GAAGf,OAAO,CAACgB,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK,EAAK;IAC/C,OACErB,IAAA,CAACJ,gBAAgB;MACf0B,KAAK,EAAEC,MAAM,CAACR,MAAO;MAErBS,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMR,WAAW,CAACI,IAAI,CAAC;MAAA,CAAC;MAAAK,QAAA,EAEjCzB,IAAA,CAACN,IAAI;QAAC4B,KAAK,EAAEC,MAAM,CAACG,IAAK;QAAAD,QAAA,EAAEL;MAAI,CAAO;IAAC,GAHlCC,KAIW,CAAC;EAEvB,CAAC,CAAC;EAEF,OACErB,IAAA,CAACJ,gBAAgB;IACf4B,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAMZ,qBAAqB,CAAC,KAAK,CAAC;IAAA,CAAC;IAC5CU,KAAK,EAAEC,MAAM,CAACI,SAAU;IAAAF,QAAA,EAExBvB,KAAA,CAACP,IAAI;MAAC2B,KAAK,EAAE,CAACC,MAAM,CAACK,KAAK,EAAE;QAAEtB,KAAK,EAAEF,YAAY,GAAG,EAAE;QAAEI,MAAM,EAAED,aAAa,GAAG;MAAE,CAAC,CAAE;MAAAkB,QAAA,GACnFzB,IAAA,CAACN,IAAI;QAAC4B,KAAK,EAAEC,MAAM,CAACM,KAAM;QAAAJ,QAAA,EAAC;MAA0B,CAAM,CAAC,EAC5DvB,KAAA,CAACJ,UAAU;QAAA2B,QAAA,GACRP,WAAW,EACZlB,IAAA,CAACJ,gBAAgB;UACf0B,KAAK,EAAEC,MAAM,CAACR,MAAO;UACrBS,OAAO,EAAE,SAAAA,QAAA,EAAM;YACbb,QAAQ,CAACrB,WAAW,CAACoB,KAAK,CAACO,UAAU,CAAC,CAAC;YACvCL,qBAAqB,CAAC,KAAK,CAAC;UAC9B,CAAE;UAAAa,QAAA,EAEFzB,IAAA,CAACN,IAAI;YAAC4B,KAAK,EAAEC,MAAM,CAACG,IAAK;YAAAD,QAAA,EAAE;UAAW,CAAO;QAAC,CAC9B,CAAC,EACnBzB,IAAA,CAACJ,gBAAgB;UACf0B,KAAK,EAAEC,MAAM,CAACR,MAAO;UACrBS,OAAO,EAAE,SAAAA,QAAA,EAAM;YACbb,QAAQ,CAACpB,gBAAgB,CAACmB,KAAK,CAACO,UAAU,CAAC,CAAC;YAC5CL,qBAAqB,CAAC,KAAK,CAAC;UAC9B,CAAE;UAAAa,QAAA,EAEFzB,IAAA,CAACN,IAAI;YAAC4B,KAAK,EAAEC,MAAM,CAACG,IAAK;YAAAD,QAAA,EAAE;UAAW,CAAO;QAAC,CAC9B,CAAC;MAAA,CACT,CAAC;IAAA,CACT;EAAC,CACS,CAAC;AAEvB,CAAC;AAED,IAAMF,MAAM,GAAG9B,UAAU,CAACqC,MAAM,CAAC;EAC/BH,SAAS,EAAE;IACTI,IAAI,EAAE,CAAC;IACPC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDL,KAAK,EAAE;IACLM,eAAe,EAAE,OAAO;IACxBC,YAAY,EAAE;EAChB,CAAC;EACDpB,MAAM,EAAE;IACNqB,cAAc,EAAE,CAAC;IACjBJ,UAAU,EAAE;EACd,CAAC;EACDN,IAAI,EAAE;IACJW,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAE;EACZ,CAAC;EACDT,KAAK,EAAE;IACLS,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE,OAAO;IACdC,SAAS,EAAE,QAAQ;IACnBC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE,EAAE;IACbC,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AAEF,SAASlC,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}